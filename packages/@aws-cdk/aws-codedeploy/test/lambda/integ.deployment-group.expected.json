{
  "Resources": {
    "FuncprehookServiceRole6746EC65": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "Funcprehook26EEF433": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function(){ return \"test\"; };"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FuncprehookServiceRole6746EC65",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10"
      },
      "DependsOn": [
        "FuncprehookServiceRole6746EC65"
      ]
    },
    "VersionprehookD4DFA5F7": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "Funcprehook26EEF433"
        }
      }
    },
    "Aliasprehook22D81695": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "Funcprehook26EEF433"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "VersionprehookD4DFA5F7",
            "Version"
          ]
        },
        "Name": "alias-pre-hook"
      }
    },
    "FuncposthookServiceRole0DE6D1C9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "Funcposthook745F94DB": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function(){ return \"test\"; };"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FuncposthookServiceRole0DE6D1C9",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10"
      },
      "DependsOn": [
        "FuncposthookServiceRole0DE6D1C9"
      ]
    },
    "Versionposthook4F4F6316": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "Funcposthook745F94DB"
        }
      }
    },
    "Aliasposthook0ACC00D6": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "Funcposthook745F94DB"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "Versionposthook4F4F6316",
            "Version"
          ]
        },
        "Name": "alias-post-hook"
      }
    },
    "AppF1B96344": {
      "Type": "AWS::CodeDeploy::Application",
      "Properties": {
        "ComputePlatform": "Lambda"
      }
    },
    "FuncinplaceServiceRoleB3927584": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "FuncinplaceA6026D77": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function(){ return \"test\"; };"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FuncinplaceServiceRoleB3927584",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10"
      },
      "DependsOn": [
        "FuncinplaceServiceRoleB3927584"
      ]
    },
    "Versioninplace239395AD": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "FuncinplaceA6026D77"
        }
      }
    },
    "Aliasinplace522E83EC": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "FuncinplaceA6026D77"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "Versioninplace239395AD",
            "Version"
          ]
        },
        "Name": "alias-in-place"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "AppF1B96344"
          },
          "DeploymentGroupName": {
            "Ref": "InPlaceDeployment74954D45"
          },
          "BeforeAllowTrafficHook": {
            "Ref": "Aliasprehook22D81695"
          },
          "AfterAllowTrafficHook": {
            "Ref": "Aliasposthook0ACC00D6"
          }
        }
      }
    },
    "InPlaceErrors807304D2": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Threshold": 1,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "Aliasinplace522E83EC"
            }
          }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum"
      }
    },
    "InPlaceDeploymentServiceRole896D55D3": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "InPlaceDeploymentServiceRoleDefaultPolicy1C2862F9": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::*/CodeDeploy/*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
              ],
              "Condition": {
                "StringEquals": {
                  "s3:ExistingObjectTag/UseWithCodeDeploy": "true"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "lambda:UpdateAlias",
                "lambda:GetAlias"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "Aliasinplace522E83EC"
              }
            },
            {
              "Action": "cloudwatch:DescribeAlarms",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "InPlaceErrors807304D2",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Aliasprehook22D81695"
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Aliasposthook0ACC00D6"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "InPlaceDeploymentServiceRoleDefaultPolicy1C2862F9",
        "Roles": [
          {
            "Ref": "InPlaceDeploymentServiceRole896D55D3"
          }
        ]
      }
    },
    "InPlaceDeployment74954D45": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "AppF1B96344"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "InPlaceDeploymentServiceRole896D55D3",
            "Arn"
          ]
        },
        "AlarmConfiguration": {
          "Alarms": [
            {
              "Name": {
                "Ref": "InPlaceErrors807304D2"
              }
            }
          ],
          "Enabled": true
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM"
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaAllAtOnce",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        }
      }
    },
    "FuncbluegreenServiceRole6FF59E92": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "Funcbluegreen478A48C3": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ZipFile": "exports.handler = function(){ return \"test\"; };"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "FuncbluegreenServiceRole6FF59E92",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10"
      },
      "DependsOn": [
        "FuncbluegreenServiceRole6FF59E92"
      ]
    },
    "Versionbluegreen3727C1D4": {
      "Type": "AWS::Lambda::Version",
      "Properties": {
        "FunctionName": {
          "Ref": "Funcbluegreen478A48C3"
        }
      }
    },
    "Aliasbluegreen351D4B71": {
      "Type": "AWS::Lambda::Alias",
      "Properties": {
        "FunctionName": {
          "Ref": "Funcbluegreen478A48C3"
        },
        "FunctionVersion": {
          "Fn::GetAtt": [
            "Versionbluegreen3727C1D4",
            "Version"
          ]
        },
        "Name": "alias-blue-green"
      },
      "UpdatePolicy": {
        "CodeDeployLambdaAliasUpdate": {
          "ApplicationName": {
            "Ref": "AppF1B96344"
          },
          "DeploymentGroupName": {
            "Ref": "BlueGreenDeployment5C188134"
          },
          "BeforeAllowTrafficHook": {
            "Ref": "Aliasprehook22D81695"
          },
          "AfterAllowTrafficHook": {
            "Ref": "Aliasposthook0ACC00D6"
          }
        }
      }
    },
    "BlueGreenErrors60C27452": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 1,
        "Threshold": 1,
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": {
              "Ref": "Aliasbluegreen351D4B71"
            }
          }
        ],
        "MetricName": "Errors",
        "Namespace": "AWS/Lambda",
        "Period": 300,
        "Statistic": "Sum"
      }
    },
    "BlueGreenDeploymentServiceRole225851FB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "BlueGreenDeploymentServiceRoleDefaultPolicy7008FB0A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
              ],
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::*/CodeDeploy/*"
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
              ],
              "Condition": {
                "StringEquals": {
                  "s3:ExistingObjectTag/UseWithCodeDeploy": "true"
                }
              },
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "lambda:UpdateAlias",
                "lambda:GetAlias"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "Aliasbluegreen351D4B71"
              }
            },
            {
              "Action": "cloudwatch:DescribeAlarms",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "BlueGreenErrors60C27452",
                  "Arn"
                ]
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Aliasprehook22D81695"
              }
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": {
                "Ref": "Aliasposthook0ACC00D6"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BlueGreenDeploymentServiceRoleDefaultPolicy7008FB0A",
        "Roles": [
          {
            "Ref": "BlueGreenDeploymentServiceRole225851FB"
          }
        ]
      }
    },
    "BlueGreenDeployment5C188134": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": {
          "Ref": "AppF1B96344"
        },
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "BlueGreenDeploymentServiceRole225851FB",
            "Arn"
          ]
        },
        "AlarmConfiguration": {
          "Alarms": [
            {
              "Name": {
                "Ref": "BlueGreenErrors60C27452"
              }
            }
          ],
          "Enabled": true
        },
        "AutoRollbackConfiguration": {
          "Enabled": true,
          "Events": [
            "DEPLOYMENT_FAILURE",
            "DEPLOYMENT_STOP_ON_ALARM"
          ]
        },
        "DeploymentConfigName": "CodeDeployDefault.LambdaCanary10Percent10Minutes",
        "DeploymentStyle": {
          "DeploymentOption": "WITH_TRAFFIC_CONTROL",
          "DeploymentType": "BLUE_GREEN"
        }
      }
    }
  }
}
